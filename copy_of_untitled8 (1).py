# -*- coding: utf-8 -*-
"""Copy of Untitled8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l0chqsfYVRnyGe8H3NLVdCEg4RWfRHEv
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import scipy.stats as stats
from sklearn.linear_model import LinearRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import FunctionTransformer
from sklearn.compose import ColumnTransformer
from sklearn.metrics import accuracy_score
from sklearn.model_selection import cross_val_score
from sklearn.preprocessing import OneHotEncoder
from sklearn.pipeline import make_pipeline
from sklearn.metrics import r2_score

df = pd.read_csv('/content/quikr_car.csv')

df.head()

df.info()

df.shape

df['fuel_type'].unique()

df['Price'].unique()

df['name'].unique()

df=df[df['year'].str.isnumeric()]

df['year']=df['year'].astype(int)

df=df[df['Price']!='Ask For Price']

df['Price']=df['Price'].str.replace(',','').astype(int)

df['kms_driven']=df['kms_driven'].str.split().str.get(0).str.replace(',','')

df=df[df['kms_driven'].str.isnumeric()]

df['kms_driven']=df['kms_driven'].astype(int)

df.info()

df.sample(5)

df.isnull().mean()*100

new_df = df.dropna()

new_df.info()

new_df.shape

new_df.hist(bins=50, density=True, figsize=(12, 12))
plt.show()

fig = plt.figure()
ax = fig.add_subplot(111)
df['fuel_type'].hist(bins=50, ax=ax, density=True, color='red')

# data after cca, the argument alpha makes the color

import matplotlib.pyplot as plt

fig, ax = plt.subplots()  # Create figure and axis correctly
new_df['fuel_type'].hist(bins=50, ax=ax, color='green', density=True, alpha=0.8)
plt.show()

fig = plt.figure()
ax = fig.add_subplot(111)

# original data
df['fuel_type'].hist(bins=50, ax=ax, density=True, color='red')

# data after cca, the argument alpha makes the color transparent, so we can
# see the overlay of the 2 distributions
new_df['fuel_type'].hist(bins=50, ax=ax, color='green', density=True, alpha=0.8)

sns.boxplot(new_df['fuel_type'])

sns.barplot(x='fuel_type', y='kms_driven', data=df)

new_df['name']=new_df['name'].str.split().str.slice(start=0,stop=3).str.join(' ')

new_df=new_df.reset_index(drop=True)

new_df

new_df.describe(include='all')

sns.boxplot(new_df['Price'])

new_df=new_df[new_df['Price']<6e6].reset_index(drop=True)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(new_df.drop('Price', axis=1),
                                                    new_df['Price'],
                                                    test_size=0.3,
                                                    random_state=0)

X_train.shape, X_test.shape





from sklearn.compose import ColumnTransformer



ohe=OneHotEncoder()
ohe.fit(new_df[['name','company','fuel_type']])

from sklearn.compose import ColumnTransformer
column_trans=ColumnTransformer([('trf',OneHotEncoder(sparse_output=False,handle_unknown='ignore'),['name','company','fuel_type'])],
                                    remainder='passthrough')

lr=LinearRegression()

pipe=make_pipeline(column_trans,lr)

pipe.fit(X_train,y_train)

y_pred=pipe.predict(X_test)

y_pred

r2_score(y_test,y_pred)

from sklearn.model_selection import cross_val_score

# Assuming 'pipe' is your pipeline and you have X and y
scores = cross_val_score(pipe, X_train,y_train, cv=5, scoring='r2')  # or use 'neg_mean_squared_error'

print("Cross-validation scores:", scores)
print("Average score:", scores.mean())

import pickle

pickle.dump(pipe,open('LinearRegressionModel.pkl','wb'))

pipe.predict(pd.DataFrame(columns=['name','company','year','kms_driven','fuel_type'],data=np.array(['Maruti Suzuki Swift','Maruti',2019,100,'Petrol']).reshape(1,5)))





